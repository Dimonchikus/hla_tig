version: '3.7'

services:
  telegraf:
    image: telegraf:1.18-alpine
    user: root:1000
    container_name: telegraf
    volumes:
      - ./telegraf/etc/telegraf.conf:/etc/telegraf/telegraf.conf:ro
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - influxdb
      - mongo
      - elasticsearch
    ports:
      - '127.0.0.1:8125:8125/udp'
    networks:
      - app_network

  influxdb:
    image: influxdb:1.8-alpine
    container_name: influxdb
    ports:
      - '127.0.0.1:8086:8086'
    volumes:
      - ./:/imports
      - influxdb_data:/var/lib/influxdb
    networks:
      - app_network

  grafana:
    image: grafana/grafana:8.0.2
    container_name: grafana
    links:
      - influxdb
    ports:
      - "127.0.0.1:4000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
      - ./grafana/dashboards/:/var/lib/grafana/dashboards/
    depends_on:
      - influxdb
    networks:
      - app_network

  tig_stack_app:
    container_name: tig_stack_app
    build: .
    ports:
      - "8081:8081"
    networks:
      - app_network
    depends_on:
      - mongo
      - elasticsearch

  mongo:
    image: mongo:latest
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - ./mongo/data:/data/db
    networks:
      - app_network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.4.1
    container_name: elasticsearch
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata1:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - app_network

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - tig_stack_app
    networks:
      - app_network

volumes:
  grafana_data: {}
  influxdb_data: {}
  esdata1: {}

networks:
  app_network:
    driver: bridge
